openapi: 3.0.0
tags: [ ]
info:
  title: go-echo-sample-api
  version: '0.9'
  description: Echoサンプル
  contact:
    name: k-sato
    url: 'https://tribeat.com'
    email: info@tribeat.com

paths:
  /api/open/healthcheck:
    get:
      summary: ヘルスチェック
      tags: [ "システム" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultOK'
              example:
                result: true
        '500':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultError'

  /api/v2/myshop/{memberId}:
    get:
      summary: マイ店舗 一覧取得
      tags: [ "マイ店舗" ]
      parameters:
        - $ref: '#/components/parameters/getMyMemberId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultMyShop'
              examples:
                sample-1:
                  summary: 通常レスポンス（データあり）
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: [
                        {
                          shop_cd: "06666",
                          name: "AA店"
                        },
                        {
                          shop_cd: "07777",
                          name: "BBB店"
                        },
                        {
                          shop_cd: "08888",
                          name: "CCCC店"
                        },
                        {
                          shop_cd: "09999",
                          name: "DDDDD店"
                        },
                    ]
                sample-2:
                  summary: 通常レスポンス（データなし）
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: [ ]
        '401':
          description: API-Gatewayレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "401"
                      error_message: "Unauthorized"
                    response: [ ]
        '500':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "500"
                      error_message: "予期せぬエラーが発生"
                    response: [ ]

  /api/v2/myshop:
    post:
      summary: マイ店舗 登録
      tags: [ "マイ店舗" ]
      requestBody:
        description: マイ店舗登録リクエスト
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestMyShopParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultMyShop'
              examples:
                sample-1:
                  summary: 通常レスポンス（リクエスト内で登録した店舗コードのみレスポンス）
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: [
                        {
                          shop_cd: "06666",
                          name: "AA店"
                        },
                        {
                          shop_cd: "07777",
                          name: "BBB店"
                        },
                        {
                          shop_cd: "08888",
                          name: "CCCC店"
                        },
                        {
                          shop_cd: "09999",
                          name: "DDDDD店"
                        },

                    ]
                sample-2:
                  summary: 通常レスポンス（登録済みのため、レスポンスなし）
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: [ ]
        '400':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "400"
                      error_message: "リクエストパラメータ不正"
                    response: [ ]
        '401':
          description: API-Gatewayレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "401"
                      error_message: "Unauthorized"
                    response: [ ]
        '500':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "500"
                      error_message: "予期せぬエラーが発生"
                    response: [ ]
  /api/v2/myshop/delete:
    post:
      summary: マイ店舗削除
      tags: [ "マイ店舗" ]
      requestBody:
        description: マイ店舗削除リクエスト
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestMyShopParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultMyShop'
              examples:
                sample-1:
                  summary: 通常レスポンス（リクエスト内で削除した店舗コードのみレスポンス）
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: [
                        {
                          shop_cd: "06666",
                          name: "AA店"
                        },
                        {
                          shop_cd: "08888",
                          name: "CCCC店"
                        },
                    ]
                sample-2:
                  summary: 通常レスポンス（削除済みのため、レスポンスなし）
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: [ ]
                sample-3:
                  summary: 通常レスポンス（1店舗削除した時のレスポンス）
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: [
                        {
                          shop_cd: "09999",
                          name: "DDDDD店"
                        },
                    ]
        '400':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "400"
                      error_message: "リクエストパラメータ不正"
                    response: [ ]
        '401':
          description: API-Gatewayレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "401"
                      error_message: "Unauthorized"
                    response: [ ]
        '500':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "500"
                      error_message: "予期せぬエラーが発生"
                    response: [ ]



  /api/v2/user/detail/{memberId}:
    get:
      summary: 会員情報 参照
      tags: [ "会員管理" ]
      parameters:
        - $ref: '#/components/parameters/getMyMemberId'
      responses:
        '200':
          description: 会員情報の取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultUserDetail'
              examples:
                sample-1:
                  summary: 通常レスポンス(非モスカード会員)
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: {
                      member_id: "1234567890",
                      sid: "",
                      uid: "",
                      carrier: "sp",
                      device_type_entry: "",
                      device_type_update: "",
                      mail_address: "test-test@imjp.co.jp",
                      contract_status: "1",
                      nickname: "ああああああ",
                      postal_code: "1410032",
                      prefectures: "13",
                      address1: "品川区",
                      address2: "大崎２丁目１-１",
                      address3: "住友不動産麻布十番ビル９Ｆ",
                      address_code: "13109003002",
                      birthday: "2000-01-01T00:00:00Z",
                      sex: 2,
                      moscard_flag: 0,
                      nos_flag: 1,
                      child_member_flag: 0,
                      last_continue_time: "2018-10-04 14:31:48",
                      via: "",
                      contract_date: "2018-10-04 14:31:48",
                      cancel_date: "",
                      old_member_flag: "",
                      old_user_id: "",
                      nos_id: "W000000002494",
                      simple_login_flag: 0,
                      omit_password_flag: 1,
                      mymos_rank_id: 0,
                      mymos_rank_name: "",
                      next_mymos_rank_id: 0,
                      next_mymos_rank_name: ""
                    }
                sample-2:
                  summary: 通常レスポンス(モスカード会員)
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: {
                      member_id: "99999999",
                      sid: "",
                      uid: "",
                      carrier: "sp",
                      device_type_entry: "",
                      device_type_update: "",
                      mail_address: "test@example.jp",
                      contract_status: "1",
                      nickname: "いいいい",
                      postal_code: "1410032",
                      prefectures: "13",
                      address1: "テスト住所１",
                      address2: "テスト住所２",
                      address3: "テスト住所３",
                      address_code: "13109003002",
                      birthday: "2000-01-01T00:00:00Z",
                      sex: 2,
                      moscard_flag: 1,
                      nos_flag: 1,
                      child_member_flag: 0,
                      last_continue_time: "2018-10-04 14:31:48",
                      via: "",
                      contract_date: "2018-10-04 14:31:48",
                      cancel_date: "",
                      old_member_flag: "",
                      old_user_id: "",
                      nos_id: "W000000000001",
                      simple_login_flag: 0,
                      omit_password_flag: 1,
                      mymos_rank_id: 3,
                      mymos_rank_name: "ゴールド",
                      next_mymos_rank_id: 2,
                      next_mymos_rank_name: "シルバー"
                    }

        '400':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "400"
                      error_message: "リクエストパラメータ不正"
                    response: { }
        '401':
          description: API-Gatewayレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "401"
                      error_message: "Unauthorized"
                    response: [ ]

        '500':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "500"
                      error_message: "予期せぬエラーが発生"
                    response: null


  /api/v2/user/update:
    post:
      summary: 会員情報 変更
      tags: [ "会員管理" ]
      requestBody:
        description: 会員情報 変更リクエスト
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestUserUpdateParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResult'
              examples:
                sample-1:
                  summary: OK
                  value:
                    header:
                      status: "200"
                      error_message: ""
                    response: { }
        '400':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "400"
                      error_message: "リクエストパラメータ不正"
                    response: null
        '401':
          description: API-Gatewayレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "401"
                      error_message: "Unauthorized"
                    response: [ ]
        '500':
          description: NG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResultError'
              examples:
                sample-1:
                  summary: Error
                  value:
                    header:
                      status: "500"
                      error_message: "予期せぬエラーが発生"
                    response: null





components:
  parameters:
    getMyMemberId:
      name: memberId
      in: path
      description: 取得対象memberId
      required: true
      schema:
        type: string
        minLength: 1

  schemas:
    resultOK:
      type: object
      description: 成功
      properties:
        result:
          type: boolean
          description: 結果
      required:
        - result
    resultError:
      type: object
      description: 失敗
      properties:
        result:
          type: boolean
          description: 結果
        error:
          $ref: '#/components/schemas/error'
      required:
        - result
        - error
    error:
      type: object
      description: エラー情報
      properties:
        statusCode:
          type: string
          description: ステータスコード
        detail:
          type: string
          description: エラー内容
      required:
        - statusCode
        - detail

    commonHeader:
      type: object
      description: 共通レスポンスヘッダ
      properties:
        status:
          type: string
          description: ステータスコード
        error_message:
          type: string
          default: ""
          description: エラー内容
      required:
        - status
        - error_message
    commonResult:
      type: object
      description: 共通レスポンス
      properties:
        header:
          $ref: '#/components/schemas/commonHeader'
        response:
          type: array
          description: レスポンス部（Null）
          items:
            default: { }
      required:
        - header
        - response

    commonResultError:
      type: object
      description: 共通エラーレスポンス
      properties:
        header:
          $ref: '#/components/schemas/commonHeader'
        response:
          type: array
          description: レスポンス部（Null）
          items:
            default: { }
      required:
        - header
        - response


    shopList:
      type: object
      description: 店舗ID配列
      properties:
        shop_cd:
          type: string
          description: 店舗コード
        name:
          type: string
          description: 店舗名

      required:
        - shop_cd
        - name


    requestMyShopParams:
      type: object
      description: マイ店舗操作インターフェース
      properties:
        member_id:
          type: string
          description: 会員ID
          minLength: 1
        shop_list:
          type: array
          description: 登録店舗コード
          items:
            type: string

      required:
        - member_id
        - shop_list

    resultMyShop:
      type: object
      description: マイ店舗一覧結果
      properties:
        header:
          $ref: '#/components/schemas/commonHeader'
        response:
          type: array
          description: レスポンス部
          items:
            $ref: '#/components/schemas/shopList'
      required:
        - header
        - response




    requestUserUpdateParams:
      type: object
      description: 会員情報更新
      properties:
        member_id:
          type: string
          description: 会員ID
          minLength: 1
        user_data:
          type: object
          description: 更新項目一覧
          properties:
            nickname:
              type: string
              description: ニックネーム
              maxLength: 50
              minLength: 1
            birthday:
              type: string
              format: 'date-time'
              description: 生年月日 2000-01-01T00:00:00Z
              minLength: 1
            sex:
              type: integer
              description: 性別 1は男性、2が女性
              enum: [ 1, 2 ]
              minimum: 1
            prefectures:
              type: string
              description: 居住地
              enum: [ "01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47" ]
              minLength: 1
            updated_at:
              type: string
              format: 'date-time'
              description: 更新日
          required:
            - nickname
            - birthday
            - sex
            - prefectures
      required:
        - member_id
        - user_data

    userData:
      type: object
      description: 会員情報詳細
      properties:
        member_id:
          description: 会員ID
          type: string
        sid:
          description: セッションID
          type: string
        uid:
          description: UID
          type: string
        carrier:
          description: キャリア
          type: string
        device_type_entry:
          description: 端末タイプ(初回登録時)
          type: string
        device_type_update:
          description: 端末タイプ（更新時）
          type: string
        mail_address:
          description: メールアドレス
          type: string
        contract_status:
          description: 会員ステータス
          type: string
        nickname:
          description: ニックネーム
          type: string
        postal_code:
          description: 郵便番号
          type: string
        prefectures:
          description: 都道府県コード
          type: string
        address1:
          description: 市区町村
          type: string
        address2:
          description: 町域
          type: string
        address3:
          description: マンション名等
          type: string
        address_code:
          description: 住所コード
          type: string
        birthday:
          description: 生年月日。フォーマットは"2000-01-01T00:00:00Z"
          type: string
          format: 'date-time'
        sex:
          description: 性別
          type: integer
        moscard_flag:
          description: ホルダー会員フラグ
          type: integer
        nos_flag:
          description: NOS会員フラグ
          type: integer
        child_member_flag:
          description: こども会員フラグ
          type: integer
        last_continue_time:
          description: 最終アクセス日
          type: string
        via:
          description: 経由
          type: string
        contract_date:
          description: 登録日
          type: string
        cancel_date:
          description: 解約日
          type: string
        old_member_flag:
          description: 旧会員フラグ
          type: integer
        old_user_id:
          description: 旧会員ID
          type: string
        nos_id:
          description: NOSID
          type: string
        simple_login_flag:
          description: 簡単ログインフラグ
          type: integer
        omit_password_flag:
          description: パスワード省略フラグ
          type: integer
        mymos_rank_id:
          description: 今年度マイモスユーザランク
          type: integer
          default: 0
        mymos_rank_name:
          description: 今年度マイモスユーザランク名
          type: string
          default: ""
        next_mymos_rank_id:
          description: 次年度マイモスユーザランク
          type: integer
          default: 0
        next_mymos_rank_name:
          description: 次年度マイモスユーザランク名
          type: string
          default: ""

      required:
        - member_id
        - sid
        - uid
        - carrier
        - device_type_entry
        - device_type_update
        - mail_address
        - contract_status
        - nickname
        - postal_code
        - prefectures
        - address1
        - address2
        - address3
        - address_code
        - birthday
        - sex
        - moscard_flag
        - nos_flag
        - child_member_flag
        - last_continue_time
        - via
        - contract_date
        - cancel_date
        - old_member_flag
        - old_user_id
        - nos_id
        - simple_login_flag
        - omit_password_flag
        - mymos_rank_id
        - mymos_rank_name
        - next_mymos_rank_id
        - next_mymos_rank_name

    resultUserDetail:
      type: object
      description: メルマガフラグ操作インターフェース
      properties:
        header:
          $ref: '#/components/schemas/commonHeader'
        response:
          $ref: '#/components/schemas/userData'
      required:
        - header
        - response

    melmagaFlags:
      type: object
      description: 更新ユーザ情報配列
      properties:
        mail_magazine_flag:
          description: 通常メルマガフラグ
          type: integer
          format: int32
        shop_mail_magazine_flag:
          description: 店舗メルマガフラグ
          type: integer
          format: int32
        birthday_mail_magazine_flag:
          description: 誕生日メルマガフラグ
          type: integer
          format: int32
        waiwai_mail_magazine_flag:
          description: モスワイワイメルマガフラグ
          type: integer
          format: int32
        nos_mail_magazine_flag:
          description: NOSメルマガフラグ
          type: integer
          format: int32
        rank_mail_magazine_flag:
          description: モス カード会員限定メルマガフラグ
          type: integer
          format: int32
      required:
        - mail_magazine_flag
        - shop_mail_magazine_flag
        - birthday_mail_magazine_flag
        - waiwai_mail_magazine_flag
        - nos_mail_magazine_flag
        - rank_mail_magazine_flag





